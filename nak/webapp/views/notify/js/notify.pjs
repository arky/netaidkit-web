<script type="text/javascript">
	notifications = [];
	notification_active = false;

	// push a notification to the client-side messages stack	
	pushNotification = function(notification) {
		if(typeof notification != 'undefined') {
			notifications.push(notification);
		}
		if(notification_active == false) {
			openNotification(notifications.pop());
		}
	}
	
	// open a notification
	openNotification = function(notification) {
		if(typeof notification != 'undefined') {
			notification_active == true;
			message = notification[0];
			type = notification[1];
			closetext = notification[2];
			buttontext = notification[3];
			var buttonfunction = (typeof notification[4] != 'undefined'?notification[4]:'');
			if(typeof type == 'undefined' || type == '') { type = 'success'; }
			if(typeof closetext == 'undefined' || closetext == '') { closetext = 'X'; }
			// translate raw strings and push message
			$.ajax({
			  type: 'POST',
			  url: '/client/translate',
			  data: { q: closetext },
			  success: function(data, status) { if(closetext) { closetext = data; } },
			  async:true
			});
			$.ajax({
			  type: 'POST',
			  url: '/client/translate',
			  data: { q: buttontext },
			  success: function(data, status) { if(buttontext) { buttontext = data; } },
			  async:true
			});
			if(message.trim().substr(0,1) != '<') {
				$.ajax({
				  type: 'POST',
				  url: '/client/translate',
				  data: { q: message },
				  success: function(data, status) { message = data; },
				  async:true
				});
			}
			setTimeout( function() {	// for now: in lieu of using promises
				// buttons
				output = '<div class="notify-buttons">';
				if(typeof buttontext != 'undefined') {
					output += '<button onclick="'+buttonfunction.replace(/\"/g,"'")+';" class="btn btn-sm btn-primary">'+buttontext+'</button><div style="width: 12px; display: inline-block;"></div>';
				}
				output += '<button onclick="closeNotification();" class="btn btn-sm btn-success">'+closetext+'</button></div>';
				// content
				// <p style="font-weight: bold;">Alert title</p>
				output += '<p style="margin-top: 13px;">'+message+'</p>';
				$('#notify').attr('class','alert alert-'+type);
				$('#notify > div').html(output);
				// close after 30 seconds
				notification_active = setTimeout( function() {
					closeNotification();
				}, 30000);
			}, 5000);
		}
	}

	// close a notification
	closeNotification = function() {
		clearTimeout(notification_active);
		// close current message
		var notifyclass = $('#notify').attr('class');
		$('#notify').attr('class',notifyclass+' notify-hidden');
		setTimeout( function() {
			// any new messages on the stack? open the next one
			notification_active == false;
			openNotification(notifications.pop());
		}, 1000);
	}

	// get all PHP generated info boxes, and convert them to push Notifications
	convertNotifications = function() {
		var infobox = 'div.tile.info';
		$(infobox).each(function() {
			var message = $(infobox).html();
			pushNotification([message,'success','Close']);
		});
		var infobox = 'div.tile.update';
		$(infobox).each(function() {
			var message = $(infobox).html();
			pushNotification([message,'info','Close','Go to update!','window.location.href = "/admin/update"']);
		});
		var infobox = 'div.tile.error';
		$(infobox).each(function() {
			var message = $(infobox).html();
			pushNotification([message,'danger','Close']);
		});
	}
	
    $(document).ready(function() {
		convertNotifications();
	});
	
	// EXAMPLES:
	//	pushNotification(['This is a test also...','success','Close','Test','alert("WOOT!")']);
	//	pushNotification(['This is a test and more stuff!...','warning','Close']);
	
</script>
